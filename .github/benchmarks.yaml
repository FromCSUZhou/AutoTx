name: benchmarks

on:
  issue_comment:
    types: [created, edited]

jobs:
  run:
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/workflows/benchmarks')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Is owner?
      run: |
        exists=$(echo $(grep -Fxcs ${CREATOR} .github/CODEOWNERS))
        if [ "$exists" == "1" ] ; then
          echo IS_OWNER=true >> $GITHUB_ENV
        else
          echo IS_OWNER=false >> $GITHUB_ENV
        fi
      env:
        CREATOR: ${{github.event.comment.user.login}}

    - name: Is not owner...
      if: env.IS_OWNER == 'false'
      uses: actions/github-script@0.8.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{github.event.comment.user.login}} is not an OWNER. Please see the .github/OWNERS file...'
          })

    - name: Fail if conditions aren't met...
      if: |
        env.IS_OWNER != 'true'
      run: exit 1

    - name: Get test name if provided
      run: echo TEST_NAME=$(echo "${{ github.event.comment.body }}" | grep -oP '(?<=/workflows/benchmarks\s)\w+') >> $GITHUB_ENV

    - name: Benchmarks PR comment
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '[Running Benchmarks](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})'
          })

    - name: Run benchmarks
      run: |
        if [ -n "${{ env.TEST_NAME }}" ]; then
          echo "Running benchmarks for test: ${{ env.TEST_NAME }}"
          poetry run pytest autotx/tests/test_benchmarks.py::test_auto_tx_${{ env.TEST_NAME }}
        else
          echo "Running benchmarks with default settings"
          poetry run pytest autotx/tests/test_benchmarks.py -s
        fi
      env:
        OPENAI_API_KEY: ${{ secrets.BENCHMARK_CI_OPENAI_API_KEY }}
